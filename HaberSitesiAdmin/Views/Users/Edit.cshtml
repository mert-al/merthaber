@using DataAccess
@using HaberSitesiAdmin.Services
@model DataAccess.User

@{
    ViewBag.User = "active";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container-xxl flex-grow-1 container-p-y">
        <h4 class="fw-bold py-3 mb-4">
            <span class="text-muted fw-light">Kullanıcılar/</span>Düzenle
        </h4>
        @{ 
            User user = (User)Session["User"];
        }

        <!-- Basic Layout -->
        <div class="row">
            <div class="col-xl">
                <div class="card mb-4">
                    @{
                        if (user.Role_Id == 1)
                        {
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <a href="~/Users" class="btn btn-primary mb-3">Kullanıcılar Sayfasi</a>
                            </div>
                        }
                    }
                    <div class="card-body">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <img src="@Model.Img" style="max-height:150px" alt="Profil Fotografi" />
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Img, htmlAttributes: new { @class = "form-label" })
                            <div class="col-md-10">
                                <input class="form-control" type="file" id="file" name="file" />
                                <br />
                                @Html.ValidationMessageFor(model => model.Img, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @{
                            if (user.Role_Id == 1)
                            {
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "form-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("SelectedRole", (List<SelectListItem>)ViewBag.Roles, new { @class = "form-control", })
                                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            else
                            {
                                <input type="hidden" id="SelectedRole" name="SelectedRole" value="@Model.Role_Id" />
                            }
                        }


                        <div class="mb-3">
                            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
                            <div class="col-md-10">
                                <input type="password" name="newPassword" id="newPassword" class="form-control" />
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.isActive, new { htmlAttributes = new { @class = "form-check-input" } })
                                @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.Img)
                        @Html.HiddenFor(model => model.Password)
                        @Html.HiddenFor(model => model.Role)
                        @Html.HiddenFor(model => model.isDeleted)
                        @Html.HiddenFor(model => model.CreatedDate)
                        @Html.HiddenFor(model => model.UpdatedDate)
                        <button type="submit" class="btn btn-primary">KAYDET</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
